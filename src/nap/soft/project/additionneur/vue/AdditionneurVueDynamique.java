/*
 * Td7 du cours d'ALG2G.
 */
package nap.soft.project.additionneur.vue;

import nap.soft.project.additionneur.architecturemvc.AdditionneurModele;
import nap.soft.project.additionneur.architecturemvc.Etat;
import java.awt.BorderLayout;
import javax.swing.JFrame;

/**
 * Représente la vue additionneur dynamique.
 *
 * @author g35991(Tuncer Can.)
 */
public class AdditionneurVueDynamique extends AbstractAdditionneurVue {

    /**
     * Permet de créer un nouveau AdditionneurDynamique
     */
    public AdditionneurVueDynamique() {
        initComponents();
    }

    /**
     * Permet de créer un nouveau AdditionneurDynamique.
     *
     * @param aModele le modèle
     */
    public AdditionneurVueDynamique(AdditionneurModele aModele) {
        initComponents();
        setModele(aModele);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monNombreDynamique1 = new nap.soft.project.additionneur.vue.outils.MonNombreDynamique();

        setPreferredSize(new java.awt.Dimension(300, 100));
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));
        add(monNombreDynamique1);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Permet de définir les nouvelles etats des termes.
     */
    @Override
    public void notifieChangement() {
        Etat e = getModele().getEtat();
        monNombreDynamique1.setNombre(getModele().getListeners());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private nap.soft.project.additionneur.vue.outils.MonNombreDynamique monNombreDynamique1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        JFrame jf = new JFrame();
        jf.add(new AdditionneurVueDynamique(), BorderLayout.CENTER);
        jf.pack();
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setVisible(true);

    }
}
